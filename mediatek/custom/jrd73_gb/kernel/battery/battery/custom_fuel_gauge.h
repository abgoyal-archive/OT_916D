
#include <mach/mt6573_typedefs.h>

#define FGAUGE_VOLTAGE_FACTOR           2.44 // mV
#define FGAUGE_CURRENT_FACTOR           6.25 // uV/Rsns
#define FGAUGE_CURRENT_OFFSET_FACTOR    1.56 // uV/Rsns
#define FGAUGE_CAR_FACTOR               6.25 // uV/Rsns
#define FGAUGE_RSNS_FACTOR              0.02 // Ohm

//#define COMPASATE_OCV                   80 // mV for evb
#define COMPASATE_OCV                   40 // mV for phone

#define BATTERY_VOLTAGE_MINIMUM         3400
#define BATTERY_VOLTAGE_MAXIMUM         4200

#define BATTERY_CAPACITY_MAXIMUM        1310

#define TEMPERATURE_T0                  110
#define TEMPERATURE_T1                  0
#define TEMPERATURE_T2                  25
#define TEMPERATURE_T3                  50
#define TEMPERATURE_T                   255 // This should be fixed, never change the value

//#define BATT_CAPACITY                   1280
#define BATT_CAPACITY                   1310

#define ENABLE_SW_COULOMB_COUNTER       0 // 1 is enable, 0 is disable
//#define ENABLE_SW_COULOMB_COUNTER       1 // 1 is enable, 0 is disable

//#define FG_CURRENT_OFFSET_DISCHARGING 	31
#define FG_CURRENT_OFFSET_DISCHARGING 	0

#define FG_RESISTANCE 	20

#define FG_METER_RESISTANCE 	0
//#define FG_METER_RESISTANCE 	540 // current meter

#define MAX_BOOTING_TIME_FGCURRENT	5*6 // 5 seconds, 6 points = 1s

#if defined(CONFIG_POWER_EXT)
//#define OCV_BOARD_COMPESATE	32 //mV 
#define OCV_BOARD_COMPESATE	72 //mV 
#define R_FG_BOARD_BASE		1000
#define R_FG_BOARD_SLOPE	1000 //slope
#else
//#define OCV_BOARD_COMPESATE	0 //mV 
//#define OCV_BOARD_COMPESATE	48 //mV 
//#define OCV_BOARD_COMPESATE	25 //mV 
#define OCV_BOARD_COMPESATE	0 //mV 
#define R_FG_BOARD_BASE		1000
#define R_FG_BOARD_SLOPE	1000 //slope
//#define R_FG_BOARD_SLOPE	1057 //slope
//#define R_FG_BOARD_SLOPE	1075 //slope
#endif

#define Q_MAX_POS_50	1310
#define Q_MAX_POS_25	1310
#define Q_MAX_POS_0		1297
#define Q_MAX_NEG_10	1213

#define Q_MAX_POS_50_H_CURRENT	1300
#define Q_MAX_POS_25_H_CURRENT	1299
#define Q_MAX_POS_0_H_CURRENT	1266
#define Q_MAX_NEG_10_H_CURRENT	1094

#define R_FG_VALUE 				24 // mOhm, base is 20/ modify to 24 as JRD GIN PCB design can't meet our requirement
#define CURRENT_DETECT_R_FG	100  //10mA

#define OSR_SELECT_7			1

#define CAR_TUNE_VALUE			100 //0.94  modify by sangmei

/////////////////////////////////////////////////////////////////////
// <DOD, Battery_Voltage> Table
/////////////////////////////////////////////////////////////////////
typedef struct _BATTERY_PROFILE_STRUC
{
    kal_int32 percentage;
    kal_int32 voltage;
} BATTERY_PROFILE_STRUC, *BATTERY_PROFILE_STRUC_P;

typedef enum
{
    T1_0C,
    T2_25C,
    T3_50C
} PROFILE_TEMPERATURE;

// T0 -10C
BATTERY_PROFILE_STRUC battery_profile_t0[] =
{
	{0  , 4153},
	{2  , 4126},
	{3  , 4105},
	{5  , 4089},
	{7  , 4076},
	{8  , 4061},
	{10 , 4046},
	{12 , 4030},
	{13 , 4016},
	{15 , 4004},
	{16 , 3993},
	{18 , 3983},
	{20 , 3973},
	{21 , 3964},
	{23 , 3954},
	{25 , 3945},
	{26 , 3935},
	{28 , 3924},
	{30 , 3913},
	{31 , 3901},
	{33 , 3888},
	{35 , 3877},
	{36 , 3865},
	{38 , 3855},
	{39 , 3846},
	{41 , 3838},
	{43 , 3832},
	{44 , 3826},  
	{46 , 3821}, 
	{48 , 3815},
	{49 , 3810},
	{51 , 3806},  
	{53 , 3802},
	{54 , 3798},
	{56 , 3795},
	{58 , 3791},
	{59 , 3789},
	{61 , 3786},
	{62 , 3785},
	{64 , 3782},
	{66 , 3781},
	{67 , 3780},
	{69 , 3778},
	{71 , 3776},
	{72 , 3774},
	{74 , 3769},
	{76 , 3765},
	{77 , 3760},
	{79 , 3752},
	{81 , 3744},
	{82 , 3736},
	{84 , 3726},
	{86 , 3716},
	{87 , 3709},
	{89 , 3703},
	{91 , 3699},
	{92 , 3696},
	{94 , 3690},
	{95 , 3680},
	{97 , 3654},
	{98 , 3629},
	{98 , 3608},
	{99 , 3589},
	{99 , 3573},
	{99 , 3562},
	{99 , 3552},
	{100, 3543},
	{100, 3537},
	{100, 3531},
	{100, 3526},
	{100, 3400},
	{100, 3400},
	{100, 3400},
	{100, 3400},
	{100, 3400},
	{100, 3400},
	{100, 3400},
	{100, 3400},
	{100, 3400},
	{100, 3400},
	{100, 3400}
}; 
   
// T1 0C
BATTERY_PROFILE_STRUC battery_profile_t1[] =
{  
	{0  , 4174},
	{2  , 4155},
	{3  , 4139},
	{5  , 4124},
	{6  , 4111},
	{8  , 4096},
	{9  , 4084},
	{11 , 4071},
	{12 , 4059},
	{14 , 4045},
	{15 , 4032},
	{17 , 4019},
	{19 , 4007},
	{20 , 3996},
	{22 , 3986},
	{23 , 3977},
	{25 , 3967},
	{26 , 3959},
	{28 , 3949},
	{29 , 3940},
	{31 , 3932},
	{32 , 3922},
	{34 , 3912},
	{35 , 3900},
	{37 , 3886},
	{38 , 3872},
	{40 , 3861},
	{42 , 3851},  
	{43 , 3842}, 
	{45 , 3834},
	{46 , 3827},
	{48 , 3822},  
	{49 , 3816},
	{51 , 3811},
	{52 , 3807},
	{54 , 3803},
	{55 , 3799},
	{57 , 3795},
	{58 , 3792},
	{60 , 3789},
	{62 , 3787},
	{63 , 3784},
	{65 , 3782},
	{66 , 3780},
	{68 , 3780},
	{69 , 3778},
	{71 , 3776},
	{72 , 3775},
	{74 , 3772},
	{75 , 3768},
	{77 , 3762},
	{78 , 3755},
	{80 , 3748},
	{82 , 3739},
	{83 , 3729},
	{85 , 3717},
	{86 , 3706},
	{88 , 3701},
	{89 , 3697},
	{91 , 3694},
	{92 , 3692},
	{94 , 3686},
	{95 , 3666},
	{97 , 3609},
	{98 , 3524},
	{100, 3428},
	{100, 3393},
	{100, 3375},
	{100, 3363},
	{101, 3363},
	{101, 3363},
	{101, 3363},
	{101, 3363},
	{101, 3363},
	{101, 3363},
	{101, 3363},
	{101, 3363},
	{101, 3363},
	{101, 3363},
	{101, 3363},
	{101, 3363}

#if 0
	{0,   4184},
    {3,   4128},
    {10,  4040},
    {20,  3966},
    {30,  3908},
    {38,  3860},
    {47,  3818},
    {55,  3800},
    {70,  3772},
    {78,  3756},
    {83,  3734},
    {87,  3708},
    {90,  3688},
    {95,  3660},
    {98,  3562},
    {100, 3400}
#endif
};

// T2 25C
BATTERY_PROFILE_STRUC battery_profile_t2[] =
{
	{0  , 4185},
	{2  , 4169},
	{3  , 4154},
	{5  , 4139},
	{6  , 4124},
	{8  , 4110},
	{9  , 4097},
	{11 , 4083},
	{12 , 4070},
	{14 , 4058},
	{15 , 4046},
	{17 , 4033},
	{18 , 4021},
	{20 , 4010},
	{21 , 3999},
	{23 , 3988},
	{24 , 3978},
	{26 , 3968},
	{27 , 3959},
	{29 , 3949},
	{30 , 3940},
	{32 , 3931},
	{34 , 3922},
	{35 , 3914},
	{37 , 3903},
	{38 , 3891},
	{40 , 3877},
	{41 , 3864},  
	{43 , 3852}, 
	{44 , 3843},
	{46 , 3835},
	{47 , 3828},  
	{49 , 3822},
	{50 , 3817},
	{52 , 3811},
	{53 , 3807},
	{55 , 3802},
	{56 , 3797},
	{58 , 3794},
	{59 , 3790},
	{61 , 3787},
	{62 , 3783},
	{64 , 3781},
	{65 , 3778},
	{67 , 3775},
	{69 , 3772},
	{70 , 3769},
	{72 , 3765},
	{73 , 3761},
	{75 , 3756},
	{76 , 3749},
	{78 , 3743},
	{79 , 3737},
	{81 , 3730},
	{82 , 3721},
	{84 , 3711},
	{85 , 3699},
	{87 , 3687},
	{88 , 3684},
	{90 , 3683},
	{91 , 3680},
	{93 , 3677},
	{94 , 3669},
	{96 , 3639},
	{97 , 3577},
	{99 , 3489},
	{101, 3349},
	{101, 3278},
	{101, 3266},
	{101, 3260},
	{101, 3260},
	{101, 3260},
	{101, 3260},
	{101, 3260},
	{101, 3260},
	{101, 3260},
	{101, 3260},
	{101, 3260},
	{101, 3260},
	{101, 3260},
	{101, 3260}

#if 0
	{0,   4176},
    {3,   4107},
    {10,  4063},
    {20,  3988},
    {30,  3933},
    {38,  3885},
    {47,  3832},
    {55,  3803},
    {70,  3776},
    {78,  3745},
    {83,  3728},
    {87,  3708},
    {90,  3688},
    {95,  3668},
    {98,  3562},
    {100, 3400}
#endif
};

// T3 50C
BATTERY_PROFILE_STRUC battery_profile_t3[] =
{
	{0  , 4185},
	{2  , 4169},
	{3  , 4154},
	{5  , 4139},
	{6  , 4124},
	{8  , 4110},
	{9  , 4097},
	{11 , 4083},
	{12 , 4071},
	{14 , 4059},
	{15 , 4047},
	{17 , 4034},
	{18 , 4022},
	{20 , 4011},
	{21 , 4000},
	{23 , 3989},
	{24 , 3979},
	{26 , 3969},
	{27 , 3960},
	{29 , 3950},
	{30 , 3941},
	{32 , 3932},
	{34 , 3923},
	{35 , 3915},
	{37 , 3904},
	{38 , 3892},
	{40 , 3878},
	{41 , 3867},  
	{43 , 3855}, 
	{44 , 3846},
	{46 , 3838},
	{47 , 3831},  
	{49 , 3825},
	{50 , 3820},
	{52 , 3814},
	{53 , 3810},
	{55 , 3805},
	{56 , 3800},
	{58 , 3797},
	{59 , 3793},
	{61 , 3790},
	{62 , 3786},
	{64 , 3784},
	{65 , 3781},
	{67 , 3778},
	{69 , 3775},
	{70 , 3772},
	{72 , 3768},
	{73 , 3764},
	{75 , 3759},
	{76 , 3755},
	{78 , 3749},
	{79 , 3743},
	{81 , 3736},
	{82 , 3727},
	{84 , 3717},
	{85 , 3705},
	{87 , 3693},
	{88 , 3690},
	{90 , 3689},
	{91 , 3686},
	{93 , 3680},
	{94 , 3672},
	{96 , 3642},
	{97 , 3580},
	{99 , 3492},
	{101, 3342},
	{101, 3271},
	{101, 3269},
	{101, 3250},
	{101, 3250},
	{101, 3250},
	{101, 3250},
	{101, 3250},
	{101, 3250},
	{101, 3250},
	{101, 3250},
	{101, 3250},
	{101, 3250},
	{101, 3250},
	{101, 3250}

#if 0
		{0,   4184},
    {3,   4136},
    {10,  4068},
    {20,  3992},
    {30,  3932},
    {38,  3890},
    {47,  3832},
    {55,  3800},
    {70,  3772},
    {78,  3732},
    {83,  3714},
    {87,  3694},
    {90,  3676},
    {95,  3656},
    {98,  3562},
    {100, 3400}
#endif
};

// battery profile for actual temperature. The size should be the same as T1, T2 and T3
BATTERY_PROFILE_STRUC battery_profile_temperature[] =
{
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},   
    {0, 0},
    {0, 0},
    {0, 0},
		{0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},   
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},   
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},   
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},   
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},   
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},   
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},   
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},   
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},   
    {0, 0},
    {0, 0},
    {0, 0}
 
#if 0
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},   
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},    
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0}	
#endif
};

/////////////////////////////////////////////////////////////////////
// <Rbat, Battery_Voltage> Table
/////////////////////////////////////////////////////////////////////
typedef struct _R_PROFILE_STRUC
{
    kal_int32 resistance; // Ohm
    kal_int32 voltage;
} R_PROFILE_STRUC, *R_PROFILE_STRUC_P;

// T0 -10C
R_PROFILE_STRUC r_profile_t0[] =
{
	{395 , 4174},
	{395 , 4151},
	{423 , 4133},
	{443 , 4113},
	{458 , 4095},
	{465 , 4076},
	{475 , 4042},
	{485 , 3992},
	{493 , 3970},
	{505 , 3952},
	{510 , 3937},
	{518 , 3924},
	{523 , 3909},
	{528 , 3895},
	{533 , 3881},
	{540 , 3867},
	{543 , 3856},
	{543 , 3843},
	{543 , 3832},
	{543 , 3823},
	{535 , 3815},
	{535 , 3808},
	{530 , 3801},
	{528 , 3797},
	{530 , 3792},
	{533 , 3788},
	{540 , 3783},
	{545 , 3781},  
	{553 , 3778}, 
	{553 , 3773},
	{560 , 3770},
	{570 , 3763},  
	{578 , 3757},
	{583 , 3749},
	{588 , 3738},
	{590 , 3728},
	{600 , 3713},
	{603 , 3698},
	{613 , 3688},
	{610 , 3671},
	{618 , 3630},
	{625 , 3520},
	{628 , 3476},
	{630 , 3451},
	{635 , 3432},
	{635 , 3420},
	{640 , 3420},
	{645 , 4095},
	{650 , 4076},
	{653 , 4042},
	{660 , 3992},
	{665 , 3970},
	{673 , 3952},
	{690 , 3937},
	{713 , 3924},
	{755 , 3909},
	{820 , 3895},
	{905 , 3881},
	{1035, 3867},
	{1138, 3856},
	{1078, 3843},
	{1025, 3832},
	{983 , 3823},
	{938 , 3815},
	{908 , 3808},
	{893 , 3801},
	{860 , 3797},
	{843 , 3792},
	{833 , 3788},
	{825 , 3698},
	{503 , 3688},
	{503 , 3671},
	{503 , 3630},
	{503 , 3520},
	{503 , 3476},
	{503 , 3451},
	{503 , 3432},
	{503 , 3420},
	{503 , 3420},
	{503 , 3407},
	{503 , 3400}	
};

// T1 0C
R_PROFILE_STRUC r_profile_t1[] =
{
	{240, 4174},
	{240, 4155},
	{243, 4139},
	{245, 4124},
	{253, 4111},
	{255, 4096},
	{260, 4084},
	{260, 4071},
	{265, 4059},
	{268, 4045},
	{273, 4032},
	{275, 4019},
	{278, 4007},
	{280, 3996},
	{283, 3986},
	{288, 3977},
	{290, 3967},
	{295, 3959},
	{298, 3949},
	{300, 3940},
	{308, 3932},
	{308, 3922},
	{308, 3912},
	{305, 3900},
	{293, 3886},
	{283, 3872},
	{278, 3861},
	{273, 3851},  
	{268, 3842}, 
	{270, 3834},
	{268, 3827},
	{273, 3822},  
	{275, 3816},
	{275, 3811},
	{280, 3807},
	{283, 3803},
	{285, 3799},
	{283, 3795},
	{288, 3792},
	{293, 3789},
	{295, 3787},
	{295, 3784},
	{298, 3782},
	{300, 3780},
	{303, 3780},
	{303, 3778},
	{303, 3776},
	{303, 3775},
	{303, 3772},
	{298, 3768},
	{295, 3762},
	{293, 3755},
	{293, 3748},
	{293, 3739},
	{295, 3729},
	{295, 3717},
	{295, 3706},
	{303, 3701},
	{305, 3697},
	{318, 3694},
	{340, 3692},
	{365, 3686},
	{383, 3666},
	{400, 3609},
	{470, 3524},
	{570, 3428},
	{485, 3393},
	{440, 3375},
	{413, 3363},
	{415, 3363},
	{415, 3363},
	{415, 3363},
	{415, 3363},
	{415, 3363},
	{415, 3363},
	{415, 3363},
	{415, 3363},
	{415, 3363},
	{415, 3363},
	{415, 3363},
	{415, 3363}

#if 0
	{280,  4184},
    {265,  4128},
    {390,  4040},
    {470,  3966},
    {500,  3908},
    {470,  3860},
    {470,  3818},
    {490,  3800},
    {530,  3772},
    {520,  3756},
    {545,  3734},
    {575,  3708},
    {600,  3688},
    {830,  3660},
    {1200, 3562},
    {1180, 3400}
#endif
};

// T2 25C
R_PROFILE_STRUC r_profile_t2[] =
{
	{143, 4185},
	{143, 4169},
	{145, 4154},
	{148, 4139},
	{148, 4124},
	{148, 4110},
	{150, 4097},
	{150, 4083},
	{153, 4070},
	{155, 4058},
	{158, 4046},
	{158, 4033},
	{158, 4021},
	{160, 4010},
	{163, 3999},
	{163, 3988},
	{165, 3978},
	{168, 3968},
	{173, 3959},
	{173, 3949},
	{178, 3940},
	{180, 3931},
	{183, 3922},
	{190, 3914},
	{185, 3903},
	{180, 3891},
	{173, 3877},
	{165, 3864},  
	{158, 3852}, 
	{155, 3843},
	{150, 3835},
	{155, 3828},  
	{153, 3822},
	{158, 3817},
	{155, 3811},
	{158, 3807},
	{155, 3802},
	{155, 3797},
	{163, 3794},
	{163, 3790},
	{163, 3787},
	{163, 3783},
	{165, 3781},
	{168, 3778},
	{165, 3775},
	{168, 3772},
	{165, 3769},
	{165, 3765},
	{160, 3761},
	{160, 3756},
	{155, 3749},
	{155, 3743},
	{158, 3737},
	{155, 3730},
	{155, 3721},
	{158, 3711},
	{155, 3699},
	{153, 3687},
	{155, 3684},
	{160, 3683},
	{165, 3680},
	{170, 3677},
	{175, 3669},
	{175, 3639},
	{175, 3577},
	{188, 3489},
	{213, 3349},
	{198, 3278},
	{168, 3266},
	{158, 3260},
	{153, 3260},
	{153, 3260},
	{153, 3260},
	{153, 3260},
	{153, 3260},
	{153, 3260},
	{153, 3260},
	{153, 3260},
	{153, 3260},
	{153, 3260},
	{153, 3260}

#if 0
	{200,  4176},
    {205,  4107},
    {200,  4063},
    {225,  3988},
    {260,  3933},
    {270,  3885},
    {210,  3832},
    {205,  3803},
    {225,  3776},
    {200,  3745},
    {210,  3728},
    {210,  3708},
    {205,  3688},
    {230,  3668},
    {260,  3562},
    {300,  3400}
#endif
};

// T3 50C
R_PROFILE_STRUC r_profile_t3[] =
{
	{125, 4185},
	{125, 4169},
	{128, 4154},
	{130, 4139},
	{130, 4124},
	{130, 4110},
	{133, 4097},
	{133, 4083},
	{138, 4071},
	{140, 4059},
	{143, 4047},
	{143, 4034},
	{143, 4022},
	{145, 4011},
	{148, 4000},
	{148, 3989},
	{150, 3979},
	{153, 3969},
	{158, 3960},
	{158, 3950},
	{163, 3941},
	{165, 3932},
	{168, 3923},
	{175, 3915},
	{170, 3904},
	{165, 3892},
	{158, 3878},
	{155, 3867},  
	{148, 3855}, 
	{145, 3846},
	{140, 3838},
	{145, 3831},  
	{143, 3825},
	{148, 3820},
	{145, 3814},
	{155, 3810},
	{153, 3805},
	{153, 3800},
	{160, 3797},
	{160, 3793},
	{160, 3790},
	{160, 3786},
	{163, 3784},
	{165, 3781},
	{163, 3778},
	{165, 3775},
	{163, 3772},
	{163, 3768},
	{158, 3764},
	{158, 3759},
	{160, 3755},
	{160, 3749},
	{163, 3743},
	{160, 3736},
	{163, 3727},
	{165, 3717},
	{163, 3705},
	{160, 3693},
	{163, 3690},
	{168, 3689},
	{173, 3686},
	{170, 3680},
	{175, 3672},
	{175, 3642},
	{175, 3580},
	{188, 3492},
	{188, 3342},
	{180, 3271},
	{175, 3269},
	{128, 3250},
	{128, 3250},
	{128, 3250},
	{128, 3250},
	{128, 3250},
	{128, 3250},
	{128, 3250},
	{128, 3250},
	{128, 3250},
	{128, 3250},
	{128, 3250},
	{128, 3250}

#if 0
	{170,  4184},
    {175,  4136},
    {170,  4068},
    {185,  3992},
    {200,  3932},
    {220,  3890},
    {180,  3832},
    {175,  3800},
    {190,  3772},
    {170,  3732},
    {180,  3714},
    {175,  3694},
    {170,  3676},
    {180,  3656},
    {195,  3562},
    {300,  3400}
#endif
};

// r-table profile for actual temperature. The size should be the same as T1, T2 and T3
R_PROFILE_STRUC r_profile_temperature[] =
{	
	{0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},   
    {0, 0},
    {0, 0},
    {0, 0},
		{0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},   
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},   
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},   
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},   
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},   
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},   
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},   
    {0, 0},
    {0, 0},
    {0, 0},   
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},   
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},   
    {0, 0},
    {0, 0}

#if 0
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},   
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},    
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0},
    {0, 0}	
#endif
};


int fgauge_get_saddles(void);
BATTERY_PROFILE_STRUC_P fgauge_get_profile(kal_uint32 temperature);

int fgauge_get_saddles_r_table(void);
R_PROFILE_STRUC_P fgauge_get_profile_r_table(kal_uint32 temperature);
